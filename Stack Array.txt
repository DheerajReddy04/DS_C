#include <stdio.h>
#include <stdlib.h>
#define size 100
struct stack {
    int list[size];
    int top;
};
void push(struct stack*, int);
int pop(struct stack*);
int peak(struct stack);
void display(struct stack);
int main() {
    struct stack s;
    s.top = -1;
    int op, x,n;
    while(1) {
        printf("Enter choice 1. Push 2. Pop 3. Top value 4. Display 0. exit\n");
        scanf("%d",&op);
        switch(op) {
            case 1 : printf("Enter element to be pushed\n");
                     scanf("%d",&x);
                     push(&s,x);
                     break;
            case 2 : n = pop(&s);
                     if(n != -1)
                     printf("The popped value is %d\n",n);
                     break;
            case 3 : n = peak(s);
                     printf("The toppest value is %d\n",n);
                     break;
            case 4 : display(s);
                     break;
            case 0 : return 0;
            default : printf("Enter a valid choice\n");
        }
    }
    return 0;
}
void push(struct stack * sp, int x) {
    if(sp->top == size -1 )
    printf("Overflow\n");
    else
    sp->list[++sp->top] = x;
}
int pop(struct stack * sp) {
    if(sp->top == -1)  {
    printf("Underflow\n");
    return -1;
    }
    else
    return(sp->list[sp->top--]);
}
int peak(struct stack s) {
    if(s.top == -1) {
    printf("No elements\n");
    return -1;
    }
    else
    return s.list[s.top];
}
void display(struct stack s) {
    if(s.top == -1)
    printf("No elements\n");
    else {
        for(int i = 0; i <= s.top;i++)
        printf("%d\t",s.list[i]);
    }
}